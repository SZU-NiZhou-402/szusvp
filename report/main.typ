#set heading(numbering: (..num) => if num.pos().len() < 5 {
  numbering("1.1", ..num)
})

#let hrule(length: 100%, stroke: gray + 1pt) = {
  line(length: length, stroke: stroke)
}

#let imageonside(lefttext, rightimage, bottomtext: none, marginleft: 0em, margintop: 0.5em) = {
  set par(justify: true)
  grid(columns: 2, column-gutter: 1em, lefttext, rightimage)
  set par(justify: false)
  block(inset: (left: marginleft, top: -margintop), bottomtext)
}

#set text(font: ("Times New Roman", "SimSun"))

#set table(
  fill: (x, y) =>
    if x == 0 or y == 0 { rgb("#917f7f") },
  inset: (right: 1.5em),
)

#show table.cell: it => {
  if it.x == 0 or it.y == 0 {
    set text(white)
    strong(it)
  } else {
    it
  }
}

#counter(heading).update(5)

= 硬件技术
#hrule()
构建一个高效、可靠且具备成本效益的语音交互助手，其硬件平台的选择与设计至关重要。本章节将详细阐述所选硬件平台的构成，分析各关键组件的技术特性与选型依据，并对所采用的实时操作系统进行探讨，旨在为后续的系统实现与优化提供坚实的硬件基础。语音交互系统通常要求硬件具备足够的计算能力以运行本地模型或处理前端信号，同时需要高质量的音频输入输出接口，稳定的网络连接能力，以及在嵌入式环境下对功耗与体积的严格控制。

== 主体架构
#hrule()
嵌入式系统的主体架构定义了其核心处理单元、内存、外设接口以及它们之间的互联方式。当前，面向物联网与边缘计算应用的硬件开发板架构呈现多样化趋势。例如，以树莓派（Raspberry Pi）为代表的单板计算机（SBC）通常采用ARM Cortex-A系列应用处理器，拥有相对强大的通用计算能力和丰富的外部接口，能够运行完整的Linux操作系统，适合需要复杂应用处理和多媒体能力的场景。然而，其功耗和成本相对较高。另一类则是基于微控制器（MCU）的开发板，如Arduino系列（基于AVR或ARM Cortex-M MCU）或STM32系列开发板（基于ARM Cortex-M MCU），它们更侧重于实时控制、低功耗和成本效益，适用于对计算性能要求不高但对实时性、功耗有严格限制的场景。

本项目所选用的 ESP32-S3 PICO 开发板，其主体架构围绕乐鑫（Espressif Systems）的ESP32-S3片上系统（SoC）构建。这种架构的显著特点是高度集成化，ESP32-S3 SoC内部集成了双核微处理器、Wi-Fi与蓝牙无线通信模块、多种外设接口以及可观的片上内存。PICO版本的开发板通常指采用了系统级封装（System-in-Package, SiP）技术的模块，将SoC、闪存（Flash）、晶振甚至无源器件集成到一个紧凑的封装内，极大地缩小了电路板尺寸，简化了外围电路设计。

#imageonside([
  \
  该开发板架构通过板载USB接口提供供电和调试功能，引出ESP32-S3的GPIO（通用输入输出）引脚，便于连接各类传感器、执行器以及本项目所需的音频子系统。这种以高集成度SoC为核心，辅以必要外围电路和接口的紧凑型架构，非常适合空间受限、要求兼顾一定计算能力、无线连接和低功耗的边缘智能设备，如本次调研的语音交互助手。其架构优势在于平衡了性能、功耗、成本和开发便捷性，为端侧运行轻量级大语言模型提供了可行的硬件基础。
], figure(
  image("image/esp32-pico.png", width: 90%),
  caption: "ESP32-S3-Pico开发板",
))

== 主控芯片
#hrule()
主控芯片是嵌入式系统的核心，负责执行程序指令、处理数据、控制外设以及管理人机交互。在选择主控芯片时，需综合考量其处理能力、内存资源、外设接口、功耗特性、开发生态以及成本等因素。市场上常见的主控芯片类型多样，例如面向高性能计算的ARM Cortex-A系列处理器，广泛应用于智能手机、平板电脑及高端嵌入式设备；面向实时控制和低功耗应用的ARM Cortex-M系列微控制器，如STM32家族，凭借其丰富的型号和强大的生态系统占据了重要地位；此外，还有RISC-V架构芯片作为新兴力量，以其开放性和可定制性受到关注。

本项目选用 ESP32-S3 作为主控芯片。ESP32-S3是乐鑫公司推出的一款集成了2.4 GHz Wi-Fi (802.11 b/g/n) 和蓝牙5 (LE) 的双核MCU。其处理器核心为 Xtensa® 32位 LX7 微处理器，主频最高可达240 MHz。每个核心都包含独立的指令缓存（ICache）和数据缓存（DCache），以及用于高效数据处理的单精度浮点运算单元（FPU）。特别值得关注的是，ESP32-S3在硬件层面增加了对 人工智能（AI）加速的支持，包括用于神经网络计算的向量指令（Vector Instructions）。这些指令能够显著提升卷积、矩阵乘法等AI模型中常见运算的效率，对于在资源受限的端侧设备上部署和运行如本项目所涉及的蒸馏剪枝后的简单LLM至关重要。

在内存方面，ESP32-S3内置了512 KB的SRAM（静态随机存取存储器）和384 KB的ROM（只读存储器），并通过SPI接口支持外挂高达1 GB的闪存和PSRAM（伪静态随机存取存储器）。这种灵活的内存配置，允许开发者根据应用需求扩展程序存储空间和运行时数据空间。

外设接口方面，ESP32-S3提供了丰富的选择，包括多达45个可编程GPIO，SPI（串行外设接口）、I2C（内部集成电路总线）、I2S（集成声音总线，对音频处理至关重要）、UART（通用异步收发传输器）、ADC（模数转换器）、DAC（数模转换器）、脉宽调制（PWM）、温度传感器以及USB OTG（On-The-Go）等。这些接口为连接麦克风、功放、传感器、显示器等外部设备提供了便利。

ESP32-S3还具备先进的电源管理功能，支持多种低功耗模式，有助于延长电池供电设备的续航时间。其完善的软件开发工具包（ESP-IDF）基于FreeRTOS，提供了丰富的API和中间件，极大地简化了应用程序的开发流程。综上所述，ESP32-S3凭借其双核处理能力、AI加速指令集、丰富的内存和外设选项、内建的无线连接以及良好的功耗控制，成为实现端侧语音交互助手的理想选择。

== 收音芯片
#hrule()

收音芯片，通常指麦克风及其前端处理电路，是语音交互系统中将声学信号转换为电信号的关键部件。其性能直接影响到语音识别的准确率和用户体验。常见的麦克风类型主要有传统的驻极体电容麦克风（Electret Condenser Microphone, ECM）和微机电系统麦克风（Micro-Electro-Mechanical System, MEMS）。

接收人声的能力方面，两种麦克风都能有效拾取人声。ECM通过驻极体薄膜感应声波振动引起电容变化，其音质表现成熟，频响范围可以做得较宽。MEMS麦克风则利用半导体工艺在硅片上制造微小的机械振膜和感应结构，体积小巧，一致性高。对于人声频段（通常在300Hz至3.4kHz，关键信息甚至更高），两者均能提供足够的灵敏度和频率响应。然而，MEMS麦克风由于制造工艺的精密性，其声学特性的一致性通常优于传统ECM，这对于多麦克风阵列应用尤为重要，有助于实现更精准的波束成形和噪声抑制算法。

在近场与远场参数表现上，麦克风的拾音距离能力受到其灵敏度、本底噪声以及配合的信号处理算法等多种因素影响。近场语音交互（如手持设备对话）对麦克风的要求相对宽松。对于远场语音交互（例如房间内与智能音箱对话，距离数米），则对麦克风的信噪比和指向性提出了更高要求。MEMS麦克风由于其小巧的体积和易于集成数字接口（如PDM或I2S）的特性，更容易与先进的音频处理算法结合，实现有效的远场拾音。例如，通过构建MEMS麦克风阵列，并利用波束成形（beamforming）技术，可以增强特定方向（用户说话方向）的语音信号，同时抑制其他方向的噪声和混响，从而提升远场拾音效果。ECM同样可以用于远场，但实现高性能阵列时，对模拟电路设计和一致性匹配的要求更高。

*信噪比（Signal-to-Noise Ratio, SNR）*是衡量麦克风性能的关键指标，定义为信号功率与噪声功率之比，通常用分贝（dB）表示：
$ "SNR" = 10log_10 P_"signal" / P_"noise" $ 
或 
$ "SNR" = 20log_10 V_"signal" / V_"noise" $
其中 P 代表功率，V 代表电压幅值。更高的SNR意味着麦克风能输出更纯净的语音信号，淹没在噪声中的微弱语音细节更容易被捕获。一般来说，MEMS麦克风，特别是数字输出的MEMS麦克风，由于其内部集成了前置放大器甚至模数转换器（ADC），信号在模拟域的路径较短，受外部电磁干扰（EMI）的影响较小，因此通常能提供较高的SNR，典型值可达60dB以上，高性能MEMS麦克风甚至能超过70dB。ECM的SNR则因设计和制造质量而异，虽然也能达到不错的水平，但在抗干扰和一致性方面可能不及MEMS。

关于功耗，ECM本身是被动元件，需要外部偏置电压才能工作，其功耗主要来自内部集成的场效应晶体管（FET）或外部的前置放大电路。MEMS麦克风则根据其类型（模拟输出或数字输出）和内部集成电路的复杂程度，功耗有所不同。模拟MEMS麦克风的功耗与ECM相近，可能在几十到几百微安（μA）级别。数字MEMS麦克风由于集成了ADC和数字信号处理逻辑，其工作电流可能稍高，但通常也控制在几百微安到1毫安（mA）左右。许多MEMS麦克风还具备低功耗的休眠模式，在没有语音活动时可以显著降低能耗。对于本项目这种基于ESP32-S3的嵌入式系统，尤其当考虑便携性或电池供电时，选择低功耗的MEMS麦克风并配合有效的语音活动检测（Voice Activity Detection, VAD）功能，对优化整体系统功耗至关重要。

综上所述，虽然ECM在某些应用中仍具成本优势，但MEMS麦克风凭借其体积小、一致性高、易于集成、通常具有更高信噪比以及良好的功耗控制等特性，更适合现代智能语音交互设备，特别是对空间、性能和功耗有综合要求的端侧应用。

== 功放芯片
#hrule()
功放芯片，即功率放大器集成电路，其核心功能是将来自主控芯片或音频编解码器（CODEC）的微弱音频信号进行放大，以驱动扬声器发出足够响度的声音。功放芯片的选型直接影响到输出音质、系统效率和整体功耗。根据其工作原理和效率特性，功放主要分为A类、B类、AB类、C类和D类等。A类功放具有最佳的线性度和最低的失真，但效率极低（理论最高50%，实际常为25%左右），发热量大。B类功放效率较高（理论最高78.5%），但存在交越失真。AB类功放是A类和B类的折中，通过给晶体管施加微小的偏置电压以消除交越失真，同时保持了相对较高的效率，是模拟功放中应用最广泛的类型。C类功放效率很高，但失真极大，主要用于射频放大。D类功放，也称为开关式放大器或数字功放，利用脉宽调制（PWM）技术控制开关管的导通与截止，理论效率可达100%，实际产品通常能超过90%，具有体积小、效率高、发热低的显著优点，非常适合对功耗和散热有严格要求的便携式和嵌入式设备。

在嵌入式音频应用中，功放芯片的选择也经历了一个演进过程。早期的简单音频应用可能会使用诸如 LM386 这样的低功率音频放大器。LM386是一款经典的、易于使用的单声道AB类功放芯片，外围元件少，电压增益可调，能够驱动小型扬声器。其功耗方面，静态电流约为几毫安，输出功率在几百毫瓦级别时，整体功耗对于电池供电设备而言相对较高，且效率不高。

随着对音质和集成度要求的提升，以及数字音频接口的普及，集成了更多功能的音频IC开始出现。例如，虽然MAX9814主要是一款带自动增益控制（AGC）的麦克风放大器，而非扬声器功放，但它代表了音频信号链中集成化和智能化的趋势。如果提及的是面向输出的功放，那么更合适的对比可能是从简单的分立元件或LM386这类IC，发展到更高效的D类放大器。

现代嵌入式语音交互系统，特别是采用像ESP32-S3这样具有I2S数字音频接口的主控时，倾向于选择可以直接接收数字音频信号的D类功放芯片。MAX98357AEWL+T (或简称MAX98357A) 就是这样一款典型的I2S输入D类功放。它直接接收I2S或左对齐（Left-Justified）的数字音频数据，无需外部的数模转换器（DAC），从而简化了系统设计，减少了模拟信号路径上的噪声引入。MAX98357A的突出优势包括：

*高效率*

== 闪存芯片
#hrule()

== 网络天线
#hrule()

== 实时操作系统
#hrule()
